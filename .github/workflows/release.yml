name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          LDFLAGS="-X main.version=$VERSION"
          if [ "$GOOS" = "windows" ]; then
            go build -ldflags "$LDFLAGS" -o cc-filter-${{ matrix.goos }}-${{ matrix.goarch }}.exe
          else
            go build -ldflags "$LDFLAGS" -o cc-filter-${{ matrix.goos }}-${{ matrix.goarch }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cc-filter-${{ matrix.goos }}-${{ matrix.goarch }}
          path: cc-filter-*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: cc-filter-*